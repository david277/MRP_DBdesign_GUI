//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MRP_FrontEnd
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class manufacturerEntities1 : DbContext
    {
        public manufacturerEntities1()
            : base("name=manufacturerEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BoM> BoMs { get; set; }
        public virtual DbSet<CreditReference> CreditReferences { get; set; }
        public virtual DbSet<customer> customers { get; set; }
        public virtual DbSet<inventory> inventories { get; set; }
        public virtual DbSet<invoice> invoices { get; set; }
        public virtual DbSet<invoiceLineItem> invoiceLineItems { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrders { get; set; }
        public virtual DbSet<PurchaseOrderLine> PurchaseOrderLines { get; set; }
        public virtual DbSet<quantityStatu> quantityStatus { get; set; }
        public virtual DbSet<Resource> Resources { get; set; }
        public virtual DbSet<safetyStock> safetyStocks { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<vendorProduct> vendorProducts { get; set; }
        public virtual DbSet<HILODriver> HILODrivers { get; set; }
        public virtual DbSet<vInvoiceLineItemsAndInventory> vInvoiceLineItemsAndInventories { get; set; }
    
        public virtual int updtOrderTotal(Nullable<int> invID)
        {
            var invIDParameter = invID.HasValue ?
                new ObjectParameter("invID", invID) :
                new ObjectParameter("invID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updtOrderTotal", invIDParameter);
        }
    
        public virtual int updtQty(Nullable<int> invID, Nullable<int> invSeq, Nullable<int> qty)
        {
            var invIDParameter = invID.HasValue ?
                new ObjectParameter("invID", invID) :
                new ObjectParameter("invID", typeof(int));
    
            var invSeqParameter = invSeq.HasValue ?
                new ObjectParameter("invSeq", invSeq) :
                new ObjectParameter("invSeq", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updtQty", invIDParameter, invSeqParameter, qtyParameter);
        }
    }
}
